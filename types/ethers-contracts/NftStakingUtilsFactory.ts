/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { NftStakingUtils } from "./NftStakingUtils";

export class NftStakingUtilsFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<NftStakingUtils> {
    return super.deploy(overrides || {}) as Promise<NftStakingUtils>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NftStakingUtils {
    return super.attach(address) as NftStakingUtils;
  }
  connect(signer: Signer): NftStakingUtilsFactory {
    return super.connect(signer) as NftStakingUtilsFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftStakingUtils {
    return new Contract(address, _abi, signerOrProvider) as NftStakingUtils;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    stateMutability: "nonpayable",
    type: "fallback"
  },
  {
    inputs: [],
    name: "getBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "goatCards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "higherTierCards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "impl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "lowerTierCards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImpl",
        type: "address"
      }
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]"
      },
      {
        internalType: "uint256[]",
        name: "_boosts",
        type: "uint256[]"
      }
    ],
    name: "setGoatCards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]"
      },
      {
        internalType: "uint256[]",
        name: "_prices",
        type: "uint256[]"
      }
    ],
    name: "setHigherTierCards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]"
      },
      {
        internalType: "uint256[]",
        name: "_prices",
        type: "uint256[]"
      }
    ],
    name: "setLowerTierCards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]"
      }
    ],
    name: "getCardPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "res",
        type: "uint256[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b610aea8061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063d784d42611610066578063d784d426146103fe578063d809598214610424578063e2a2d90a146104e2578063f2fde38b146104ff576100ea565b80638da5cb5b1461031c5780638f32d59b14610324578063be56d70214610340576100ea565b80637105f617116100c85780637105f61714610215578063715018a6146102d357806373aff4db146102db5780638abf6077146102f8576100ea565b80632a4d62e21461011e57806342cbb15c146101de5780636c86eb45146101f8575b6001546040516001600160a01b039091169036600082376000803683855af43d806000843e81801561011a578184f35b8184fd5b6101dc6004803603604081101561013457600080fd5b810190602081018135600160201b81111561014e57600080fd5b82018360208201111561016057600080fd5b803590602001918460208302840111600160201b8311171561018157600080fd5b919390929091602081019035600160201b81111561019e57600080fd5b8201836020820111156101b057600080fd5b803590602001918460208302840111600160201b831117156101d157600080fd5b509092509050610525565b005b6101e66105c3565b60408051918252519081900360200190f35b6101e66004803603602081101561020e57600080fd5b50356105c7565b6102836004803603602081101561022b57600080fd5b810190602081018135600160201b81111561024557600080fd5b82018360208201111561025757600080fd5b803590602001918460208302840111600160201b8311171561027857600080fd5b5090925090506105d9565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102bf5781810151838201526020016102a7565b505050509050019250505060405180910390f35b6101dc6106e9565b6101e6600480360360208110156102f157600080fd5b503561077a565b61030061078c565b604080516001600160a01b039092168252519081900360200190f35b61030061079b565b61032c6107aa565b604080519115158252519081900360200190f35b6101dc6004803603604081101561035657600080fd5b810190602081018135600160201b81111561037057600080fd5b82018360208201111561038257600080fd5b803590602001918460208302840111600160201b831117156103a357600080fd5b919390929091602081019035600160201b8111156103c057600080fd5b8201836020820111156103d257600080fd5b803590602001918460208302840111600160201b831117156103f357600080fd5b5090925090506107ce565b6101dc6004803603602081101561041457600080fd5b50356001600160a01b0316610865565b6101dc6004803603604081101561043a57600080fd5b810190602081018135600160201b81111561045457600080fd5b82018360208201111561046657600080fd5b803590602001918460208302840111600160201b8311171561048757600080fd5b919390929091602081019035600160201b8111156104a457600080fd5b8201836020820111156104b657600080fd5b803590602001918460208302840111600160201b831117156104d757600080fd5b5090925090506108ce565b6101e6600480360360208110156104f857600080fd5b5035610965565b6101dc6004803603602081101561051557600080fd5b50356001600160a01b0316610977565b61052d6107aa565b61056c576040805162461bcd60e51b81526020600482018190526024820152600080516020610a95833981519152604482015290519081900360640190fd5b60005b838110156105bc5782828281811061058357fe5b905060200201356002600087878581811061059a57fe5b602090810292909201358352508101919091526040016000205560010161056f565b5050505050565b4390565b60036020526000908152604090205481565b60608167ffffffffffffffff811180156105f257600080fd5b5060405190808252806020026020018201604052801561061c578160200160208202803683370190505b50905060005b828110156106e25760006002600086868581811061063c57fe5b90506020020135815260200190815260200160002054111561069b576002600085858481811061066857fe5b9050602002013581526020019081526020016000205482828151811061068a57fe5b6020026020010181815250506106da565b600360008585848181106106ab57fe5b905060200201358152602001908152602001600020548282815181106106cd57fe5b6020026020010181815250505b600101610622565b5092915050565b6106f16107aa565b610730576040805162461bcd60e51b81526020600482018190526024820152600080516020610a95833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60026020526000908152604090205481565b6001546001600160a01b031681565b6000546001600160a01b031690565b600080546001600160a01b03166107bf6109ca565b6001600160a01b031614905090565b6107d66107aa565b610815576040805162461bcd60e51b81526020600482018190526024820152600080516020610a95833981519152604482015290519081900360640190fd5b60005b838110156105bc5782828281811061082c57fe5b905060200201356003600087878581811061084357fe5b6020908102929092013583525081019190915260400160002055600101610818565b61086d6107aa565b6108ac576040805162461bcd60e51b81526020600482018190526024820152600080516020610a95833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6108d66107aa565b610915576040805162461bcd60e51b81526020600482018190526024820152600080516020610a95833981519152604482015290519081900360640190fd5b60005b838110156105bc5782828281811061092c57fe5b905060200201356004600087878581811061094357fe5b6020908102929092013583525081019190915260400160002055600101610918565b60046020526000908152604090205481565b61097f6107aa565b6109be576040805162461bcd60e51b81526020600482018190526024820152600080516020610a95833981519152604482015290519081900360640190fd5b6109c7816109ce565b50565b3390565b6001600160a01b038116610a135760405162461bcd60e51b8152600401808060200182810382526026815260200180610a6f6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122071e067c35efd1d06d759aa803b190908b4b3b86f8865b2a17930bcf460a37f4864736f6c634300060c0033";
