/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { LmtTokenWrapper } from "./LmtTokenWrapper";

export class LmtTokenWrapperFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_lmtAddress: string, overrides?: Overrides): Promise<LmtTokenWrapper> {
    return super.deploy(_lmtAddress, overrides || {}) as Promise<
      LmtTokenWrapper
    >;
  }
  getDeployTransaction(
    _lmtAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_lmtAddress, overrides || {});
  }
  attach(address: string): LmtTokenWrapper {
    return super.attach(address) as LmtTokenWrapper;
  }
  connect(signer: Signer): LmtTokenWrapperFactory {
    return super.connect(signer) as LmtTokenWrapperFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LmtTokenWrapper {
    return new Contract(address, _abi, signerOrProvider) as LmtTokenWrapper;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_lmtAddress",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "lmt",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "stakeFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104173803806104178339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556103b2806100656000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806318160ddd1461005c5780632e1a7d4d146100765780632ee409081461009557806370a08231146100c1578063e2d49096146100e7575b600080fd5b61006461010b565b60408051918252519081900360200190f35b6100936004803603602081101561008c57600080fd5b5035610111565b005b610093600480360360408110156100ab57600080fd5b506001600160a01b0381351690602001356101ce565b610064600480360360208110156100d757600080fd5b50356001600160a01b031661029b565b6100ef6102b6565b604080516001600160a01b039092168252519081900360200190f35b60015490565b60015461011e90826102c5565b6001553360009081526002602052604090205461013b90826102c5565b336000818152600260209081526040808320949094558154845163a9059cbb60e01b815260048101949094526024840186905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b15801561019f57600080fd5b505af11580156101b3573d6000803e3d6000fd5b505050506040513d60208110156101c957600080fd5b505050565b6001546101db9082610322565b6001556001600160a01b0382166000908152600260205260409020546102019082610322565b6001600160a01b03808416600090815260026020908152604080832094909455815484516323b872dd60e01b81523360048201523060248201526044810187905294519316936323b872dd9360648083019491928390030190829087803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b505050506040513d602081101561029557600080fd5b50505050565b6001600160a01b031660009081526002602052604090205490565b6000546001600160a01b031681565b60008282111561031c576040805162461bcd60e51b815260206004820152601760248201527f536166654d617468237375623a20554e444552464c4f57000000000000000000604482015290519081900360640190fd5b50900390565b600082820183811015610375576040805162461bcd60e51b8152602060048201526016602482015275536166654d617468236164643a204f564552464c4f5760501b604482015290519081900360640190fd5b939250505056fea2646970667358221220f0aac0d8d64dcde84c5f41b22db3bd170d9821f06e1847df3ef9f85306c6991664736f6c634300060c0033";
