/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { Erc1155Metadata } from "./Erc1155Metadata";

export class Erc1155MetadataFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Erc1155Metadata> {
    return super.deploy(overrides || {}) as Promise<Erc1155Metadata>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Erc1155Metadata {
    return super.attach(address) as Erc1155Metadata;
  }
  connect(signer: Signer): Erc1155MetadataFactory {
    return super.connect(signer) as Erc1155MetadataFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc1155Metadata {
    return new Contract(address, _abi, signerOrProvider) as Erc1155Metadata;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string"
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256"
      }
    ],
    name: "URI",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256"
      }
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102aa806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630e89341c14610030575b600080fd5b61004361003e366004610168565b610059565b6040516100509190610211565b60405180910390f35b606060006100668361008e565b604051602001610077929190610180565b60405160208183030381529060405290505b919050565b6060816100b357506040805180820190915260018152600360fc1b6020820152610089565b818060005b82156100cc57600101600a830492506100b8565b60608167ffffffffffffffff811180156100e557600080fd5b506040519080825280601f01601f191660200182016040528015610110576020820181803683370190505b50905060001982015b831561015e57600a840660300160f81b8282806001900393508151811061013c57fe5b60200101906001600160f81b031916908160001a905350600a84049350610119565b5095945050505050565b600060208284031215610179578081fd5b5035919050565b600080845460018082166000811461019f57600181146101b6576101e5565b60ff198316865260028304607f16860193506101e5565b600283048886526020808720875b838110156101dd5781548a8201529085019082016101c4565b505050860193505b50505083516101f8818360208801610244565b64173539b7b760d91b9101908152600501949350505050565b6000602082528251806020840152610230816040850160208701610244565b601f01601f19169190910160400192915050565b60005b8381101561025f578181015183820152602001610247565b8381111561026e576000848401525b5050505056fea2646970667358221220cd92a1e4ddc25c6e117ddb5fb188a8e6def2c771780c9118a8995d0e9ec302f264736f6c634300060c0033";
