/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { GenesisPool } from "./GenesisPool";

export class GenesisPoolFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _memesAddress: string,
    _memeAddress: string,
    overrides?: Overrides
  ): Promise<GenesisPool> {
    return super.deploy(
      _memesAddress,
      _memeAddress,
      overrides || {}
    ) as Promise<GenesisPool>;
  }
  getDeployTransaction(
    _memesAddress: string,
    _memeAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _memesAddress,
      _memeAddress,
      overrides || {}
    );
  }
  attach(address: string): GenesisPool {
    return super.attach(address) as GenesisPool;
  }
  connect(signer: Signer): GenesisPoolFactory {
    return super.connect(signer) as GenesisPoolFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenesisPool {
    return new Contract(address, _abi, signerOrProvider) as GenesisPool;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC1155Tradable",
        name: "_memesAddress",
        type: "address"
      },
      {
        internalType: "contract IERC20",
        name: "_memeAddress",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "card",
        type: "uint256"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "points",
        type: "uint256"
      }
    ],
    name: "CardAdded",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Redeemed",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Staked",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Withdrawn",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "cards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "meme",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "memes",
    outputs: [
      {
        internalType: "contract ERC1155Tradable",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "points",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cardId",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "addCard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "card",
        type: "uint256"
      }
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f73380380610f738339818101604052604081101561003357600080fd5b508051602090910151600080546001600160a01b0319166001600160a01b03831617815561005f6100d3565b600380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35050600480546001600160a01b0319166001600160a01b03929092169190911790556100d7565b3390565b610e8d806100e66000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80638da5cb5b116100a2578063db006a7511610071578063db006a751461026a578063e9fad8ee14610287578063ea4a294f1461028f578063ebb90edc146102b2578063f2fde38b146102ba5761010a565b80638da5cb5b1461020c5780638dc10768146102145780638f32d59b14610231578063a694fc3a1461024d5761010a565b8063358b8166116100de578063358b81661461019457806344097c48146101ba57806370a08231146101de578063715018a6146102045761010a565b80628cc2621461010f57806318160ddd146101475780632ce9aead1461014f5780632e1a7d4d14610175575b600080fd5b6101356004803603602081101561012557600080fd5b50356001600160a01b03166102e0565b60408051918252519081900360200190f35b610135610365565b6101356004803603602081101561016557600080fd5b50356001600160a01b031661036b565b6101926004803603602081101561018b57600080fd5b503561037d565b005b610135600480360360208110156101aa57600080fd5b50356001600160a01b0316610441565b6101c2610453565b604080516001600160a01b039092168252519081900360200190f35b610135600480360360208110156101f457600080fd5b50356001600160a01b0316610462565b61019261047d565b6101c2610520565b6101356004803603602081101561022a57600080fd5b503561052f565b610239610541565b604080519115158252519081900360200190f35b6101926004803603602081101561026357600080fd5b5035610567565b6101926004803603602081101561028057600080fd5b503561064d565b610192610962565b610192600480360360408110156102a557600080fd5b5080359060200135610975565b6101c2610a1f565b610192600480360360208110156102d057600080fd5b50356001600160a01b0316610a2e565b60004261035e61033f6103006305f5e1006102fa87610462565b90610a93565b6001600160a01b0386166000908152600560205260409020546103399062015180906102fa90670de0b6b3a76400009084908990610aff565b90610b5c565b6001600160a01b03851660009081526006602052604090205490610bc4565b9392505050565b60015490565b60056020526000908152604090205481565b3380156103b55761038d816102e0565b6001600160a01b03821660009081526006602090815260408083209390935560059052204290555b600082116103fe576040805162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015290519081900360640190fd5b61040782610c17565b60408051838152905133917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a25050565b60066020526000908152604090205481565b6000546001600160a01b031681565b6001600160a01b031660009081526002602052604090205490565b610485610541565b6104d6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6003546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600380546001600160a01b0319169055565b6003546001600160a01b031690565b60076020526000908152604090205481565b6003546000906001600160a01b0316610558610cd4565b6001600160a01b031614905090565b33801561059f57610577816102e0565b6001600160a01b03821660009081526006602090815260408083209390935560059052204290555b631dcd65006105b76105b033610462565b8490610bc4565b111561060a576040805162461bcd60e51b815260206004820152601d60248201527f43616e6e6f74207374616b65206d6f7265207468616e2035206d656d65000000604482015290519081900360640190fd5b61061382610cd8565b60408051838152905133917f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d919081900360200190a25050565b3380156106855761065d816102e0565b6001600160a01b03821660009081526006602090815260408083209390935560059052204290555b6000828152600760205260409020546106d6576040805162461bcd60e51b815260206004820152600e60248201526d10d85c99081b9bdd08199bdd5b9960921b604482015290519081900360640190fd5b60008281526007602090815260408083205433845260069092529091205410156107315760405162461bcd60e51b8152600401808060200182810382526024815260200180610e0e6024913960400191505060405180910390fd5b60048054604080516321a7dd6560e21b8152928301859052516001600160a01b039091169163869f7594916024808301926020929190829003018186803b15801561077b57600080fd5b505afa15801561078f573d6000803e3d6000fd5b505050506040513d60208110156107a557600080fd5b5051600480546040805163bd85b03960e01b8152928301869052516001600160a01b039091169163bd85b039916024808301926020929190829003018186803b1580156107f157600080fd5b505afa158015610805573d6000803e3d6000fd5b505050506040513d602081101561081b57600080fd5b505110610862576040805162461bcd60e51b815260206004820152601060248201526f13585e0818d85c991cc81b5a5b9d195960821b604482015290519081900360640190fd5b60008281526007602090815260408083205433845260069092529091205461088991610aff565b336000818152600660205260408082209390935560048054845163731133e960e01b8152918201939093526024810186905260016044820152608060648201526084810182905292516001600160a01b039092169263731133e99260c4808301939282900301818387803b15801561090057600080fd5b505af1158015610914573d6000803e3d6000fd5b50505060008381526007602090815260409182902054825190815291513393507f4896181ff8f4543cc00db9fe9b6fb7e6f032b7eb772c72ab1ec1b4d2e03b93699281900390910190a25050565b61097361096e33610462565b61037d565b565b61097d610541565b6109ce576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600082815260076020908152604091829020839055815184815290810183905281517f62399d91d89d6e694d41e47f3e6010c0e0b4ec78ecdddb1c02d0e321780859b0929181900390910190a15050565b6004546001600160a01b031681565b610a36610541565b610a87576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610a9081610d6c565b50565b6000808211610ae9576040805162461bcd60e51b815260206004820152601e60248201527f536166654d617468236469763a204449564953494f4e5f42595f5a45524f0000604482015290519081900360640190fd5b6000828481610af457fe5b049150505b92915050565b600082821115610b56576040805162461bcd60e51b815260206004820152601760248201527f536166654d617468237375623a20554e444552464c4f57000000000000000000604482015290519081900360640190fd5b50900390565b600082610b6b57506000610af9565b82820282848281610b7857fe5b041461035e576040805162461bcd60e51b8152602060048201526016602482015275536166654d617468236d756c3a204f564552464c4f5760501b604482015290519081900360640190fd5b60008282018381101561035e576040805162461bcd60e51b8152602060048201526016602482015275536166654d617468236164643a204f564552464c4f5760501b604482015290519081900360640190fd5b600154610c249082610aff565b60015533600090815260026020526040902054610c419082610aff565b336000818152600260209081526040808320949094558154845163a9059cbb60e01b815260048101949094526024840186905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b158015610ca557600080fd5b505af1158015610cb9573d6000803e3d6000fd5b505050506040513d6020811015610ccf57600080fd5b505050565b3390565b600154610ce59082610bc4565b60015533600090815260026020526040902054610d029082610bc4565b33600081815260026020908152604080832094909455815484516323b872dd60e01b815260048101949094523060248501526044840186905293516001600160a01b03909416936323b872dd93606480820194918390030190829087803b158015610ca557600080fd5b6001600160a01b038116610db15760405162461bcd60e51b8152600401808060200182810382526026815260200180610e326026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b039290921691909117905556fe4e6f7420656e6f75676820706f696e747320746f2072656465656d20666f7220636172644f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122033099b41eb8e381dcd37a0a951146ffc578da0888c0e7dfc39aa6b01e82bd68a64736f6c634300060c0033";
