/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { Erc721Airdrop } from "./Erc721Airdrop";

export class Erc721AirdropFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Erc721Airdrop> {
    return super.deploy(overrides || {}) as Promise<Erc721Airdrop>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Erc721Airdrop {
    return super.attach(address) as Erc721Airdrop;
  }
  connect(signer: Signer): Erc721AirdropFactory {
    return super.connect(signer) as Erc721AirdropFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc721Airdrop {
    return new Contract(address, _abi, signerOrProvider) as Erc721Airdrop;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_NFTAddress",
        type: "address"
      },
      {
        internalType: "address",
        name: "_from",
        type: "address"
      },
      {
        internalType: "address[]",
        name: "_to",
        type: "address[]"
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]"
      }
    ],
    name: "airdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561029b806100326000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063e4485ca41461005f575b600080fd5b61004361013c565b604080516001600160a01b039092168252519081900360200190f35b61013a6004803603608081101561007557600080fd5b6001600160a01b0382358116926020810135909116918101906060810160408201356401000000008111156100a957600080fd5b8201836020820111156100bb57600080fd5b803590602001918460208302840111640100000000831117156100dd57600080fd5b9193909290916020810190356401000000008111156100fb57600080fd5b82018360208201111561010d57600080fd5b8035906020019184602083028401116401000000008311171561012f57600080fd5b50909250905061014b565b005b6000546001600160a01b031681565b6000546001600160a01b03163314610196576040805162461bcd60e51b815260206004820152600960248201526837b7363ca7bbb732b960b91b604482015290519081900360640190fd5b8560005b8481101561025b57816001600160a01b03166323b872dd888888858181106101be57fe5b905060200201356001600160a01b03168787868181106101da57fe5b905060200201356040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b15801561023757600080fd5b505af115801561024b573d6000803e3d6000fd5b50506001909201915061019a9050565b505050505050505056fea264697066735822122037de58bffb3671a0042d037c4682416952030b2604f401860c5f8fd656785f2564736f6c634300060c0033";
